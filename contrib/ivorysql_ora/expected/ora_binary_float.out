--
-- BINARY_FLOAT
--
set ivorysql.enable_emptystring_to_NULL = on;
set extra_float_digits = 0;
CREATE TABLE BINARY_FLOAT_TBL (f1 binary_float);
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('    0.0');
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('1004.30   ');
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('     -34.84    ');
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('1.2345678901234e+20');
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('1.2345678901234e-20');
-- test for over and under flow
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('10e70');
ERROR:  "10e70" is out of range for type real
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('10e70');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('-10e70');
ERROR:  "-10e70" is out of range for type real
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('-10e70');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('10e-70');
ERROR:  "10e-70" is out of range for type real
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('10e-70');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('-10e-70');
ERROR:  "-10e-70" is out of range for type real
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('-10e-70');
                                                 ^
-- bad input
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('');
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('       ');
ERROR:  invalid input syntax for type real: "       "
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('       ');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('xyz');
ERROR:  invalid input syntax for type real: "xyz"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('xyz');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5.0.0');
ERROR:  invalid input syntax for type real: "5.0.0"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5.0.0');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5 . 0');
ERROR:  invalid input syntax for type real: "5 . 0"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5 . 0');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5.   0');
ERROR:  invalid input syntax for type real: "5.   0"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('5.   0');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('     - 3.0');
ERROR:  invalid input syntax for type real: "     - 3.0"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('     - 3.0');
                                                 ^
INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('123            5');
ERROR:  invalid input syntax for type real: "123            5"
LINE 1: INSERT INTO BINARY_FLOAT_TBL(f1) VALUES ('123            5')...
                                                 ^
-- special inputs
SELECT 'NaN'::binary_float;
 binary_float 
--------------
 NaN
(1 row)

SELECT 'nan'::binary_float;
 binary_float 
--------------
 NaN
(1 row)

SELECT '   NAN  '::binary_float;
 binary_float 
--------------
 NaN
(1 row)

SELECT 'infinity'::binary_float;
 binary_float 
--------------
 Infinity
(1 row)

SELECT '          -INFINiTY   '::binary_float;
 binary_float 
--------------
 -Infinity
(1 row)

-- bad special inputs
SELECT 'N A N'::binary_float;
ERROR:  invalid input syntax for type real: "N A N"
LINE 1: SELECT 'N A N'::binary_float;
               ^
SELECT 'NaN x'::binary_float;
ERROR:  invalid input syntax for type real: "NaN x"
LINE 1: SELECT 'NaN x'::binary_float;
               ^
SELECT ' INFINITY    x'::binary_float;
ERROR:  invalid input syntax for type real: " INFINITY    x"
LINE 1: SELECT ' INFINITY    x'::binary_float;
               ^
SELECT 'Infinity'::binary_float + 100.0;
 ?column? 
----------
 Infinity
(1 row)

SELECT 'Infinity'::binary_float / 'Infinity'::binary_float;
 ?column? 
----------
 NaN
(1 row)

SELECT 'nan'::binary_float / 'nan'::binary_float;
 ?column? 
----------
 NaN
(1 row)

SELECT 'nan'::number::binary_float;
 binary_float 
--------------
 NaN
(1 row)

SELECT '' AS five, * FROM BINARY_FLOAT_TBL;
 five |     f1      
------+-------------
      | 0
      | 1004.3
      | -34.84
      | 1.23457e+20
      | 1.23457e-20
      | 
(6 rows)

SELECT '' AS four, f.* FROM BINARY_FLOAT_TBL f WHERE f.f1 <> '1004.3';
 four |     f1      
------+-------------
      | 0
      | -34.84
      | 1.23457e+20
      | 1.23457e-20
(4 rows)

SELECT '' AS one, f.* FROM BINARY_FLOAT_TBL f WHERE f.f1 = '1004.3';
 one |   f1   
-----+--------
     | 1004.3
(1 row)

SELECT '' AS three, f.* FROM BINARY_FLOAT_TBL f WHERE '1004.3' > f.f1;
 three |     f1      
-------+-------------
       | 0
       | -34.84
       | 1.23457e-20
(3 rows)

SELECT '' AS three, f.* FROM BINARY_FLOAT_TBL f WHERE  f.f1 < '1004.3';
 three |     f1      
-------+-------------
       | 0
       | -34.84
       | 1.23457e-20
(3 rows)

SELECT '' AS four, f.* FROM BINARY_FLOAT_TBL f WHERE '1004.3' >= f.f1;
 four |     f1      
------+-------------
      | 0
      | 1004.3
      | -34.84
      | 1.23457e-20
(4 rows)

SELECT '' AS four, f.* FROM BINARY_FLOAT_TBL f WHERE  f.f1 <= '1004.3';
 four |     f1      
------+-------------
      | 0
      | 1004.3
      | -34.84
      | 1.23457e-20
(4 rows)

SELECT '' AS three, f.f1, f.f1 * '-10' AS x FROM BINARY_FLOAT_TBL f
   WHERE f.f1 > '0.0';
 three |     f1      |      x       
-------+-------------+--------------
       | 1004.3      | -10043
       | 1.23457e+20 | -1.23457e+21
       | 1.23457e-20 | -1.23457e-19
(3 rows)

SELECT '' AS three, f.f1, f.f1 + '-10' AS x FROM BINARY_FLOAT_TBL f
   WHERE f.f1 > '0.0';
 three |     f1      |      x      
-------+-------------+-------------
       | 1004.3      | 994.3
       | 1.23457e+20 | 1.23457e+20
       | 1.23457e-20 | -10
(3 rows)

SELECT '' AS three, f.f1, f.f1 / '-10' AS x FROM BINARY_FLOAT_TBL f
   WHERE f.f1 > '0.0';
 three |     f1      |      x       
-------+-------------+--------------
       | 1004.3      | -100.43
       | 1.23457e+20 | -1.23457e+19
       | 1.23457e-20 | -1.23457e-21
(3 rows)

SELECT '' AS three, f.f1, f.f1 - '-10' AS x FROM BINARY_FLOAT_TBL f
   WHERE f.f1 > '0.0';
 three |     f1      |      x      
-------+-------------+-------------
       | 1004.3      | 1014.3
       | 1.23457e+20 | 1.23457e+20
       | 1.23457e-20 | 10
(3 rows)

-- test divide by zero
SELECT '' AS bad, f.f1 / '0.0' from BINARY_FLOAT_TBL f;
ERROR:  division by zero
SELECT '' AS five, * FROM BINARY_FLOAT_TBL;
 five |     f1      
------+-------------
      | 0
      | 1004.3
      | -34.84
      | 1.23457e+20
      | 1.23457e-20
      | 
(6 rows)

-- test the unary abs operator
SELECT '' AS five, f.f1, @f.f1 AS abs_f1 FROM BINARY_FLOAT_TBL f;
 five |     f1      |        abs_f1        
------+-------------+----------------------
      | 0           |                    0
      | 1004.3      |     1004.29998779297
      | -34.84      |     34.8400001525879
      | 1.23457e+20 | 1.23456789557014e+20
      | 1.23457e-20 | 1.23456787202896e-20
      |             |                     
(6 rows)

UPDATE BINARY_FLOAT_TBL
   SET f1 = BINARY_FLOAT_TBL.f1 * '-1'
   WHERE BINARY_FLOAT_TBL.f1 > '0.0';
SELECT '' AS five, * FROM BINARY_FLOAT_TBL;
 five |      f1      
------+--------------
      | 0
      | -34.84
      | 
      | -1004.3
      | -1.23457e+20
      | -1.23457e-20
(6 rows)

-- drop table
DROP TABLE BINARY_FLOAT_TBL;
--SIMPLE_FLOAT
CREATE TABLE SIMPLE_FLOAT_TBL (f1 binary_float);
INSERT INTO SIMPLE_FLOAT_TBL(f1) VALUES ('    0.0');
INSERT INTO SIMPLE_FLOAT_TBL(f1) VALUES ('1004.30   ');
INSERT INTO SIMPLE_FLOAT_TBL(f1) VALUES ('     -34.84    ');
INSERT INTO SIMPLE_FLOAT_TBL(f1) VALUES ('1.2345678901234e+20');
INSERT INTO SIMPLE_FLOAT_TBL(f1) VALUES ('1.2345678901234e-20');
SELECT * FROM SIMPLE_FLOAT_TBL;
     f1      
-------------
 0
 1004.3
 -34.84
 1.23457e+20
 1.23457e-20
(5 rows)

DROP TABLE SIMPLE_FLOAT_TBL;
--SIMPLE_DOUBLE
CREATE TABLE SIMPLE_DOUBLE_TBL(f1 binary_double);
INSERT INTO SIMPLE_DOUBLE_TBL(f1) VALUES ('    0.0   ');
INSERT INTO SIMPLE_DOUBLE_TBL(f1) VALUES ('1004.30  ');
INSERT INTO SIMPLE_DOUBLE_TBL(f1) VALUES ('   -34.84');
INSERT INTO SIMPLE_DOUBLE_TBL(f1) VALUES ('1.2345678901234e+200');
INSERT INTO SIMPLE_DOUBLE_TBL(f1) VALUES ('1.2345678901234e-200');
SELECT * FROM SIMPLE_DOUBLE_TBL;
          f1          
----------------------
 0
 1004.3
 -34.84
 1.2345678901234e+200
 1.2345678901234e-200
(5 rows)

DROP TABLE SIMPLE_DOUBLE_TBL;
