--
-- TIMESTAMP
--
CREATE TABLE TIMESTAMP_TBL (d1 timestamp(2) without time zone);
-- Test shorthand input values
-- We can't just "select" the results since they aren't constants; test for
-- equality instead.  We can do that by running the test inside a transaction
-- block, within which the value of 'now' shouldn't change, and so these
-- related values shouldn't either.
BEGIN;
INSERT INTO TIMESTAMP_TBL VALUES ('today');
ERROR:  invalid value "toda" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('today');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('yesterday');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- time zone should be ignored by this data type
INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow EST');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
INSERT INTO TIMESTAMP_TBL VALUES ('tomorrow zulu');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'today';
ERROR:  syntax error at or near "without"
LINE 1: ...*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without ti...
                                                             ^
SELECT count(*) AS Three FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'tomorrow';
ERROR:  syntax error at or near "without"
LINE 1: ... AS Three FROM TIMESTAMP_TBL WHERE d1 = timestamp without ti...
                                                             ^
SELECT count(*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without time zone 'yesterday';
ERROR:  syntax error at or near "without"
LINE 1: ...*) AS One FROM TIMESTAMP_TBL WHERE d1 = timestamp without ti...
                                                             ^
COMMIT;
DELETE FROM TIMESTAMP_TBL;
-- Verify that 'now' *does* change over a reasonable interval such as 100 msec,
-- and that it doesn't change over the same interval within a transaction block
INSERT INTO TIMESTAMP_TBL VALUES ('now');
ERROR:  invalid value "now" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('now');
                                          ^
DETAIL:  Value must be an integer.
SELECT pg_sleep(0.1);
 pg_sleep 
----------
 
(1 row)

BEGIN;
INSERT INTO TIMESTAMP_TBL VALUES ('now');
ERROR:  invalid value "now" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('now');
                                          ^
DETAIL:  Value must be an integer.
SELECT pg_sleep(0.1);
ERROR:  current transaction is aborted, commands ignored until end of transaction block
INSERT INTO TIMESTAMP_TBL VALUES ('now');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT pg_sleep(0.1);
ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT count(*) AS two FROM TIMESTAMP_TBL WHERE d1 = timestamp(2) without time zone 'now';
ERROR:  syntax error at or near "("
LINE 1: ...(*) AS two FROM TIMESTAMP_TBL WHERE d1 = timestamp(2) withou...
                                                             ^
SELECT count(d1) AS three, count(DISTINCT d1) AS two FROM TIMESTAMP_TBL;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
COMMIT;
TRUNCATE TIMESTAMP_TBL;
-- Special values
INSERT INTO TIMESTAMP_TBL VALUES ('-infinity');
ERROR:  invalid value "-inf" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('-infinity');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('infinity');
ERROR:  invalid value "infi" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('infinity');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('epoch');
ERROR:  invalid value "epoc" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('epoch');
                                          ^
DETAIL:  Value must be an integer.
-- Postgres v6.0 standard output format
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01 1997 ...
                                          ^
DETAIL:  Value must be an integer.
-- Variations on Postgres v6.1 standard output format
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.000001 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.00000...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.999999 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.99999...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.4 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.4 199...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.5 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.5 199...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.6 1997 PST');
ERROR:  invalid value "Mon " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mon Feb 10 17:32:01.6 199...
                                          ^
DETAIL:  Value must be an integer.
-- ISO 8601 format
INSERT INTO TIMESTAMP_TBL VALUES ('1997-01-02');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-01-02 03:04:05');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01-08');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01-0800');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 -08:00');
ERROR:  datetime format picture ends before converting entire input string
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 -08:0...
                                          ^
INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 -0800');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 17:32:01 -07:00');
ERROR:  datetime format picture ends before converting entire input string
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 17:32:01 -07:0...
                                          ^
INSERT INTO TIMESTAMP_TBL VALUES ('2001-09-22T18:19:20');
ERROR:  invalid value "T1" for "HH24"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2001-09-22T18:19:20');
                                          ^
DETAIL:  Value must be an integer.
-- POSIX format (note that the timezone abbrev is just decoration here)
INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 08:14:01 GMT+8');
ERROR:  invalid value "GMT+8" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 08:14:01 GMT+8...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 13:14:02 GMT-1');
ERROR:  invalid value "GMT-1" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 13:14:02 GMT-1...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 12:14:03 GMT-2');
ERROR:  invalid value "GMT-2" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 12:14:03 GMT-2...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 03:14:04 PST+8');
ERROR:  invalid value "PST+8" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 03:14:04 PST+8...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 02:14:05 MST+7:00');
ERROR:  invalid value "MST+7:" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('2000-03-15 02:14:05 MST+7...
                                          ^
DETAIL:  Value must be an integer.
-- Variations for acceptable input formats
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997 -0800');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997 -080...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 5:32PM 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 5:32PM 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('1997/02/10 17:32:01-0800');
INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 PST');
ERROR:  invalid value "PST" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('1997-02-10 17:32:01 PST')...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb-10-1997 17:32:01 PST');
ERROR:  invalid value "Feb-" for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb-10-1997 17:32:01 PST'...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('02-10-1997 17:32:01 PST');
ERROR:  The hour value must be between 0 and 23.
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('02-10-1997 17:32:01 PST')...
                                          ^
INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 PST');
ERROR:  invalid value "PST" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 PST');
                                          ^
DETAIL:  Value must be an integer.
set datestyle to ymd;
INSERT INTO TIMESTAMP_TBL VALUES ('97FEB10 5:32:01PM UTC');
ERROR:  invalid value "FE" for "MM"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('97FEB10 5:32:01PM UTC');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('97/02/10 17:32:01 UTC');
ERROR:  invalid value "UTC" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('97/02/10 17:32:01 UTC');
                                          ^
DETAIL:  Value must be an integer.
reset datestyle;
INSERT INTO TIMESTAMP_TBL VALUES ('1997.041 17:32:01 UTC');
ERROR:  invalid value "UTC" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('1997.041 17:32:01 UTC');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 America/New_York');
ERROR:  invalid value "Americ" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('19970210 173201 America/N...
                                          ^
DETAIL:  Value must be an integer.
-- this fails (even though TZ is a no-op, we still look it up)
INSERT INTO TIMESTAMP_TBL VALUES ('19970710 173201 America/Does_not_exist');
ERROR:  invalid value "Americ" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('19970710 173201 America/D...
                                          ^
DETAIL:  Value must be an integer.
-- Test non-error-throwing API
SELECT pg_input_is_valid('now', 'timestamp');
ERROR:  invalid value "now" for "YYYY"
DETAIL:  Value must be an integer.
SELECT pg_input_is_valid('garbage', 'timestamp');
ERROR:  invalid value "garb" for "YYYY"
DETAIL:  Value must be an integer.
SELECT pg_input_is_valid('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamp');
ERROR:  invalid value "Ne" for "SS"
DETAIL:  Value must be an integer.
SELECT * FROM pg_input_error_info('garbage', 'timestamp');
ERROR:  invalid value "garb" for "YYYY"
DETAIL:  Value must be an integer.
SELECT * FROM pg_input_error_info('2001-01-01 00:00 Nehwon/Lankhmar', 'timestamp');
ERROR:  invalid value "Ne" for "SS"
DETAIL:  Value must be an integer.
-- Check date conversion and date arithmetic
INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 18:32:01 PDT');
ERROR:  invalid value "PDT" for "FF6"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('1997-06-10 18:32:01 PDT')...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 10 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 11 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 11 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 12 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 12 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 13 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 13 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 14 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 14 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 15 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 15 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097 BC');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097 BC')...
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0097');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0597');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 0597');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1097');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1097');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1697');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1697');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1797');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1797');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1897');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1897');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 2097');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 2097');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1996');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1996');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1996');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1996');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1996');
ERROR:  invalid value "Mar " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1996');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1996');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1996');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1996');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1996');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 1997');
ERROR:  invalid value "Jan " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 28 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1997');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 29 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1997');
ERROR:  invalid value "Mar " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Mar 01 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1997');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 30 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1997');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1997');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1999');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 1999');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2000');
ERROR:  invalid value "Jan " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2000');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 2000');
ERROR:  invalid value "Dec " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Dec 31 17:32:01 2000');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2001');
ERROR:  invalid value "Jan " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Jan 01 17:32:01 2001');
                                          ^
DETAIL:  Value must be an integer.
-- Currently unsupported syntax and ranges
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 -0097');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 -0097');
                                          ^
DETAIL:  Value must be an integer.
INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 5097 BC');
ERROR:  invalid value "Feb " for "YYYY"
LINE 1: INSERT INTO TIMESTAMP_TBL VALUES ('Feb 16 17:32:01 5097 BC')...
                                          ^
DETAIL:  Value must be an integer.
SELECT d1 FROM TIMESTAMP_TBL;
             d1             
----------------------------
 1997-01-02 00:00:00.000000
 1997-01-02 03:04:05.000000
 1997-02-10 17:32:01.080000
 1997-02-10 17:32:01.080000
 1997-02-10 17:32:01.080000
 1997-02-10 17:32:01.080000
(6 rows)

-- Check behavior at the boundaries of the timestamp range
SELECT '4714-11-24 00:00:00 BC'::timestamp;
ERROR:  invalid value "BC" for "FF6"
LINE 1: SELECT '4714-11-24 00:00:00 BC'::timestamp;
               ^
DETAIL:  Value must be an integer.
SELECT '4714-11-23 23:59:59 BC'::timestamp;  -- out of range
ERROR:  invalid value "BC" for "FF6"
LINE 1: SELECT '4714-11-23 23:59:59 BC'::timestamp;
               ^
DETAIL:  Value must be an integer.
SELECT '294276-12-31 23:59:59'::timestamp;
ERROR:  The value of month is invalid.
LINE 1: SELECT '294276-12-31 23:59:59'::timestamp;
               ^
SELECT '294277-01-01 00:00:00'::timestamp;  -- out of range
ERROR:  The value of month is invalid.
LINE 1: SELECT '294277-01-01 00:00:00'::timestamp;
               ^
-- Demonstrate functions and operators
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 > timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 > timestamp without time zone '1997-01-02';
                                ^
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 < timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 < timestamp without time zone '1997-01-02';
                                ^
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 = timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 = timestamp without time zone '1997-01-02';
                                ^
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 != timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 != timestamp without time zone '1997-01-02';
                                 ^
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 <= timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 <= timestamp without time zone '1997-01-02';
                                 ^
SELECT d1 FROM TIMESTAMP_TBL
   WHERE d1 >= timestamp without time zone '1997-01-02';
ERROR:  syntax error at or near "without"
LINE 2:    WHERE d1 >= timestamp without time zone '1997-01-02';
                                 ^
SELECT d1 - timestamp without time zone '1997-01-02' AS diff
   FROM TIMESTAMP_TBL WHERE d1 BETWEEN '1902-01-01' AND '2038-01-01';
ERROR:  syntax error at or near "without"
LINE 1: SELECT d1 - timestamp without time zone '1997-01-02' AS diff
                              ^
SELECT date_trunc( 'week', timestamp '2004-02-29 15:44:17.71393' ) AS week_trunc;
        week_trunc        
--------------------------
 Mon Feb 23 00:00:00 2004
(1 row)

-- verify date_bin behaves the same as date_trunc for relevant intervals
-- case 1: AD dates, origin < input
SELECT
  str,
  interval,
  date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2001-01-01') AS equal
FROM (
  VALUES
  ('week', '7 d'),
  ('day', '1 d'),
  ('hour', '1 h'),
  ('minute', '1 m'),
  ('second', '1 s'),
  ('millisecond', '1 ms'),
  ('microsecond', '1 us')
) intervals (str, interval),
(VALUES (timestamp '2020-02-29 15:44:17.71393')) ts (ts);
ERROR:  missing or invalid datetime field.
-- case 2: BC dates, origin < input
SELECT
  str,
  interval,
  date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2000-01-01 BC') AS equal
FROM (
  VALUES
  ('week', '7 d'),
  ('day', '1 d'),
  ('hour', '1 h'),
  ('minute', '1 m'),
  ('second', '1 s'),
  ('millisecond', '1 ms'),
  ('microsecond', '1 us')
) intervals (str, interval),
(VALUES (timestamp '0055-6-10 15:44:17.71393 BC')) ts (ts);
ERROR:  missing or invalid datetime field.
-- case 3: AD dates, origin > input
SELECT
  str,
  interval,
  date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '2020-03-02') AS equal
FROM (
  VALUES
  ('week', '7 d'),
  ('day', '1 d'),
  ('hour', '1 h'),
  ('minute', '1 m'),
  ('second', '1 s'),
  ('millisecond', '1 ms'),
  ('microsecond', '1 us')
) intervals (str, interval),
(VALUES (timestamp '2020-02-29 15:44:17.71393')) ts (ts);
ERROR:  missing or invalid datetime field.
-- case 4: BC dates, origin > input
SELECT
  str,
  interval,
  date_trunc(str, ts) = date_bin(interval::interval, ts, timestamp '0055-06-17 BC') AS equal
FROM (
  VALUES
  ('week', '7 d'),
  ('day', '1 d'),
  ('hour', '1 h'),
  ('minute', '1 m'),
  ('second', '1 s'),
  ('millisecond', '1 ms'),
  ('microsecond', '1 us')
) intervals (str, interval),
(VALUES (timestamp '0055-6-10 15:44:17.71393 BC')) ts (ts);
ERROR:  missing or invalid datetime field.
-- bin timestamps into arbitrary intervals
SELECT
  interval,
  ts,
  origin,
  date_bin(interval::interval, ts, origin)
FROM (
  VALUES
  ('15 days'),
  ('2 hours'),
  ('1 hour 30 minutes'),
  ('15 minutes'),
  ('10 seconds'),
  ('100 milliseconds'),
  ('250 microseconds')
) intervals (interval),
(VALUES (timestamp '2020-02-11 15:44:17.71393')) ts (ts),
(VALUES (timestamp '2001-01-01')) origin (origin);
ERROR:  missing or invalid datetime field.
-- shift bins using the origin parameter:
SELECT date_bin('5 min'::interval, timestamp '2020-02-01 01:01:01', timestamp '2020-02-01 00:02:30');
ERROR:  missing or invalid datetime field.
-- disallow intervals with months or years
SELECT date_bin('5 months'::interval, timestamp '2020-02-01 01:01:01', timestamp '2001-01-01');
ERROR:  missing or invalid datetime field.
SELECT date_bin('5 years'::interval,  timestamp '2020-02-01 01:01:01', timestamp '2001-01-01');
ERROR:  missing or invalid datetime field.
-- disallow zero intervals
SELECT date_bin('0 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');
ERROR:  missing or invalid datetime field.
-- disallow negative intervals
SELECT date_bin('-2 days'::interval, timestamp '1970-01-01 01:00:00' , timestamp '1970-01-01 00:00:00');
ERROR:  missing or invalid datetime field.
-- Test casting within a BETWEEN qualifier
SELECT d1 - timestamp without time zone '1997-01-02' AS diff
  FROM TIMESTAMP_TBL
  WHERE d1 BETWEEN timestamp without time zone '1902-01-01'
   AND timestamp without time zone '2038-01-01';
ERROR:  syntax error at or near "without"
LINE 1: SELECT d1 - timestamp without time zone '1997-01-02' AS diff
                              ^
-- DATE_PART (timestamp_part)
SELECT d1 as "timestamp",
   date_part( 'year', d1) AS year, date_part( 'month', d1) AS month,
   date_part( 'day', d1) AS day, date_part( 'hour', d1) AS hour,
   date_part( 'minute', d1) AS minute, date_part( 'second', d1) AS second
   FROM TIMESTAMP_TBL;
         timestamp          | year | month | day | hour | minute | second 
----------------------------+------+-------+-----+------+--------+--------
 1997-01-02 00:00:00.000000 | 1997 |     1 |   2 |    0 |      0 |      0
 1997-01-02 03:04:05.000000 | 1997 |     1 |   2 |    3 |      4 |      5
 1997-02-10 17:32:01.080000 | 1997 |     2 |  10 |   17 |     32 |   1.08
 1997-02-10 17:32:01.080000 | 1997 |     2 |  10 |   17 |     32 |   1.08
 1997-02-10 17:32:01.080000 | 1997 |     2 |  10 |   17 |     32 |   1.08
 1997-02-10 17:32:01.080000 | 1997 |     2 |  10 |   17 |     32 |   1.08
(6 rows)

SELECT d1 as "timestamp",
   date_part( 'quarter', d1) AS quarter, date_part( 'msec', d1) AS msec,
   date_part( 'usec', d1) AS usec
   FROM TIMESTAMP_TBL;
         timestamp          | quarter | msec |  usec   
----------------------------+---------+------+---------
 1997-01-02 00:00:00.000000 |       1 |    0 |       0
 1997-01-02 03:04:05.000000 |       1 | 5000 | 5000000
 1997-02-10 17:32:01.080000 |       1 | 1080 | 1080000
 1997-02-10 17:32:01.080000 |       1 | 1080 | 1080000
 1997-02-10 17:32:01.080000 |       1 | 1080 | 1080000
 1997-02-10 17:32:01.080000 |       1 | 1080 | 1080000
(6 rows)

SELECT d1 as "timestamp",
   date_part( 'isoyear', d1) AS isoyear, date_part( 'week', d1) AS week,
   date_part( 'isodow', d1) AS isodow, date_part( 'dow', d1) AS dow,
   date_part( 'doy', d1) AS doy
   FROM TIMESTAMP_TBL;
         timestamp          | isoyear | week | isodow | dow | doy 
----------------------------+---------+------+--------+-----+-----
 1997-01-02 00:00:00.000000 |    1997 |    1 |      4 |   4 |   2
 1997-01-02 03:04:05.000000 |    1997 |    1 |      4 |   4 |   2
 1997-02-10 17:32:01.080000 |    1997 |    7 |      1 |   1 |  41
 1997-02-10 17:32:01.080000 |    1997 |    7 |      1 |   1 |  41
 1997-02-10 17:32:01.080000 |    1997 |    7 |      1 |   1 |  41
 1997-02-10 17:32:01.080000 |    1997 |    7 |      1 |   1 |  41
(6 rows)

SELECT d1 as "timestamp",
   date_part( 'decade', d1) AS decade,
   date_part( 'century', d1) AS century,
   date_part( 'millennium', d1) AS millennium,
   round(date_part( 'julian', d1)) AS julian,
   date_part( 'epoch', d1) AS epoch
   FROM TIMESTAMP_TBL;
         timestamp          | decade | century | millennium | julian  |    epoch     
----------------------------+--------+---------+------------+---------+--------------
 1997-01-02 00:00:00.000000 |    199 |      20 |          2 | 2450451 |    852163200
 1997-01-02 03:04:05.000000 |    199 |      20 |          2 | 2450451 |    852174245
 1997-02-10 17:32:01.080000 |    199 |      20 |          2 | 2450491 | 855595921.08
 1997-02-10 17:32:01.080000 |    199 |      20 |          2 | 2450491 | 855595921.08
 1997-02-10 17:32:01.080000 |    199 |      20 |          2 | 2450491 | 855595921.08
 1997-02-10 17:32:01.080000 |    199 |      20 |          2 | 2450491 | 855595921.08
(6 rows)

-- extract implementation is mostly the same as date_part, so only
-- test a few cases for additional coverage.
SELECT d1 as "timestamp",
   extract(microseconds from d1) AS microseconds,
   extract(milliseconds from d1) AS milliseconds,
   extract(seconds from d1) AS seconds,
   round(extract(julian from d1)) AS julian,
   extract(epoch from d1) AS epoch
   FROM TIMESTAMP_TBL;
         timestamp          | microseconds | milliseconds | seconds  | julian  |      epoch       
----------------------------+--------------+--------------+----------+---------+------------------
 1997-01-02 00:00:00.000000 |            0 |        0.000 | 0.000000 | 2450451 | 852163200.000000
 1997-01-02 03:04:05.000000 |      5000000 |     5000.000 | 5.000000 | 2450451 | 852174245.000000
 1997-02-10 17:32:01.080000 |      1080000 |     1080.000 | 1.080000 | 2450491 | 855595921.080000
 1997-02-10 17:32:01.080000 |      1080000 |     1080.000 | 1.080000 | 2450491 | 855595921.080000
 1997-02-10 17:32:01.080000 |      1080000 |     1080.000 | 1.080000 | 2450491 | 855595921.080000
 1997-02-10 17:32:01.080000 |      1080000 |     1080.000 | 1.080000 | 2450491 | 855595921.080000
(6 rows)

-- value near upper bound uses special case in code
SELECT date_part('epoch', '294270-01-01 00:00:00'::timestamp);
ERROR:  The value of month is invalid.
LINE 1: SELECT date_part('epoch', '294270-01-01 00:00:00'::timestamp...
                                  ^
SELECT extract(epoch from '294270-01-01 00:00:00'::timestamp);
ERROR:  The value of month is invalid.
LINE 1: SELECT extract(epoch from '294270-01-01 00:00:00'::timestamp...
                                  ^
-- another internal overflow test case
SELECT extract(epoch from '5000-01-01 00:00:00'::timestamp);
      extract       
--------------------
 95617584000.000000
(1 row)

-- TO_CHAR()
SELECT to_char(d1, 'DAY Day day DY Dy dy MONTH Month month RM MON Mon mon')
   FROM TIMESTAMP_TBL;
                                         to_char                                          
------------------------------------------------------------------------------------------
 THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan
 THURSDAY  Thursday  thursday  THU Thu thu JANUARY   January   january   I    JAN Jan jan
 MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb
 MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb
 MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb
 MONDAY    Monday    monday    MON Mon mon FEBRUARY  February  february  II   FEB Feb feb
(6 rows)

SELECT to_char(d1, 'FMDAY FMDay FMday FMMONTH FMMonth FMmonth FMRM')
   FROM TIMESTAMP_TBL;
                       to_char                        
------------------------------------------------------
 THURSDAY Thursday thursday JANUARY January january I
 THURSDAY Thursday thursday JANUARY January january I
 MONDAY Monday monday FEBRUARY February february II
 MONDAY Monday monday FEBRUARY February february II
 MONDAY Monday monday FEBRUARY February february II
 MONDAY Monday monday FEBRUARY February february II
(6 rows)

SELECT to_char(d1, 'Y,YYY YYYY YYY YY Y CC Q MM WW DDD DD D J')
   FROM TIMESTAMP_TBL;
                     to_char                     
-------------------------------------------------
 1,997 1997 997 97 7 20 1 01 01 002 02 5 2450451
 1,997 1997 997 97 7 20 1 01 01 002 02 5 2450451
 1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490
 1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490
 1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490
 1,997 1997 997 97 7 20 1 02 06 041 10 2 2450490
(6 rows)

SELECT to_char(d1, 'FMY,YYY FMYYYY FMYYY FMYY FMY FMCC FMQ FMMM FMWW FMDDD FMDD FMD FMJ')
   FROM TIMESTAMP_TBL;
                   to_char                    
----------------------------------------------
 1,997 1997 997 97 7 20 1 1 1 2 2 5 2450451
 1,997 1997 997 97 7 20 1 1 1 2 2 5 2450451
 1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490
 1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490
 1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490
 1,997 1997 997 97 7 20 1 2 6 41 10 2 2450490
(6 rows)

SELECT to_char(d1, 'HH HH12 HH24 MI SS SSSS')
   FROM TIMESTAMP_TBL;
       to_char        
----------------------
 12 12 00 00 00 0
 03 03 03 04 05 11045
 05 05 17 32 01 63121
 05 05 17 32 01 63121
 05 05 17 32 01 63121
 05 05 17 32 01 63121
(6 rows)

SELECT to_char(d1, E'"HH:MI:SS is" HH:MI:SS "\\"text between quote marks\\""')
   FROM TIMESTAMP_TBL;
                     to_char                     
-------------------------------------------------
 HH:MI:SS is 12:00:00 "text between quote marks"
 HH:MI:SS is 03:04:05 "text between quote marks"
 HH:MI:SS is 05:32:01 "text between quote marks"
 HH:MI:SS is 05:32:01 "text between quote marks"
 HH:MI:SS is 05:32:01 "text between quote marks"
 HH:MI:SS is 05:32:01 "text between quote marks"
(6 rows)

SELECT to_char(d1, 'HH24--text--MI--text--SS')
   FROM TIMESTAMP_TBL;
ERROR:  date format not recognized
SELECT to_char(d1, 'YYYYTH YYYYth Jth')
   FROM TIMESTAMP_TBL;
         to_char         
-------------------------
 1997TH 1997th 2450451st
 1997TH 1997th 2450451st
 1997TH 1997th 2450490th
 1997TH 1997th 2450490th
 1997TH 1997th 2450490th
 1997TH 1997th 2450490th
(6 rows)

SELECT to_char(d1, 'YYYY A.D. YYYY a.d. YYYY bc HH:MI:SS P.M. HH:MI:SS p.m. HH:MI:SS pm')
   FROM TIMESTAMP_TBL;
                               to_char                               
---------------------------------------------------------------------
 1997 A.D. 1997 a.d. 1997 ad 12:00:00 A.M. 12:00:00 a.m. 12:00:00 am
 1997 A.D. 1997 a.d. 1997 ad 03:04:05 A.M. 03:04:05 a.m. 03:04:05 am
 1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm
 1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm
 1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm
 1997 A.D. 1997 a.d. 1997 ad 05:32:01 P.M. 05:32:01 p.m. 05:32:01 pm
(6 rows)

SELECT to_char(d1, 'IYYY IYY IY I IW IDDD ID')
   FROM TIMESTAMP_TBL;
        to_char         
------------------------
 1997 997 97 7 01 004 4
 1997 997 97 7 01 004 4
 1997 997 97 7 07 043 1
 1997 997 97 7 07 043 1
 1997 997 97 7 07 043 1
 1997 997 97 7 07 043 1
(6 rows)

SELECT to_char(d1, 'FMIYYY FMIYY FMIY FMI FMIW FMIDDD FMID')
   FROM TIMESTAMP_TBL;
       to_char        
----------------------
 1997 997 97 7 1 4 4
 1997 997 97 7 1 4 4
 1997 997 97 7 7 43 1
 1997 997 97 7 7 43 1
 1997 997 97 7 7 43 1
 1997 997 97 7 7 43 1
(6 rows)

SELECT to_char(d, 'FF1 FF2 FF3 FF4 FF5 FF6  ff1 ff2 ff3 ff4 ff5 ff6  MS US')
   FROM (VALUES
       ('2018-11-02 12:34:56'::timestamp),
       ('2018-11-02 12:34:56.78'),
       ('2018-11-02 12:34:56.78901'),
       ('2018-11-02 12:34:56.78901234')
   ) d(d);
ERROR:  date format picture ends before converting entire input string.
LINE 6:        ('2018-11-02 12:34:56.78901234')
                ^
-- Roman months, with upper and lower case.
SELECT i,
       to_char(i * interval '1mon', 'rm'),
       to_char(i * interval '1mon', 'RM')
    FROM generate_series(-13, 13) i;
ERROR:  syntax error at or near ","
LINE 2:        to_char(i * interval '1mon', 'rm'),
                                          ^
-- timestamp numeric fields constructor
SELECT make_timestamp(2014, 12, 28, 6, 30, 45.887);
        make_timestamp        
------------------------------
 Sun Dec 28 06:30:45.887 2014
(1 row)

SELECT make_timestamp(-44, 3, 15, 12, 30, 15);
       make_timestamp        
-----------------------------
 Fri Mar 15 12:30:15 0044 BC
(1 row)

-- should fail
select make_timestamp(0, 7, 15, 12, 30, 15);
ERROR:  date field value out of range: 0-07-15
-- generate_series for timestamp
select * from generate_series('2020-01-01 00:00'::timestamp,
                              '2020-01-02 03:00'::timestamp,
                              '1 hour'::interval);
ERROR:  missing or invalid datetime field.
-- the LIMIT should allow this to terminate in a reasonable amount of time
-- (but that unfortunately doesn't work yet for SELECT * FROM ...)
select generate_series('2022-01-01 00:00'::timestamp,
                       'infinity'::timestamp,
                       '1 month'::interval) limit 10;
ERROR:  missing or invalid datetime field.
-- errors
select * from generate_series('2020-01-01 00:00'::timestamp,
                              '2020-01-02 03:00'::timestamp,
                              '0 hour'::interval);
ERROR:  missing or invalid datetime field.
