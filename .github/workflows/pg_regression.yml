name: pg_regression

on:
  push:
    branches: [ master , IVORY_REL_3_STABLE ]
  pull_request:
    branches: [ master , IVORY_REL_3_STABLE ]

jobs:
  pg_regression:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]

    steps:
    - uses: actions/checkout@v3
    - name: dependancy
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git lcov bison flex \
              libkrb5-dev libssl-dev libldap-dev libpam-dev python3-dev \
              tcl-dev libperl-dev gettext libxml2-dev libxslt-dev \
              libreadline-dev libedit-dev uuid-dev libossp-uuid-dev \
              libipc-run-perl libtime-hires-perl libtest-simple-perl \
              libicu-dev
    - name: configure - linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        curl -L -o cpanm http://cpanmin.us && chmod +x cpanm && \
        ./cpanm --sudo IPC::Run && \
        ./configure \
            --prefix=$PWD/inst \
            --enable-cassert --enable-debug --enable-tap-tests --enable-rpath \
            --with-tcl --with-python --with-gssapi --with-pam --with-ldap \
            --with-python --with-gssapi --with-pam --with-ldap \
            --with-openssl --with-libedit-preferred --with-uuid=e2fs \
            --with-ossp-uuid  --with-libxml --with-libxslt  --with-perl \
            --with-icu
    - name: configure - macos
      if: ${{ matrix.os == 'macos-12' }}
      run: |
        export PKG_CONFIG_PATH="/usr/local/opt/icu4c/lib/pkgconfig"
        curl -L -o cpanm http://cpanmin.us && chmod +x cpanm && \
        ./cpanm --sudo IPC::Run && \
        ./configure \
            --prefix=$PWD/inst \
            --enable-cassert --enable-debug --enable-tap-tests --enable-rpath \
            --with-tcl --with-python --with-pam --with-ldap \
            --with-libedit-preferred --with-uuid=e2fs --with-libxml \
            --with-libxslt --with-perl --with-icu
    - name: compile
      run: make && make install

    - name: pg_regression
      run: make check-world

    - name: collect files
      if: failure()
      run: |
          find . \( -name "*.diffs" -or -name "pg_regression.out" -or -path \*/tmp_check/log -or -path \*src/test/regress/log \) -print0 |
                xargs -0 tar -czf pg_regression.tar.gz
    - name: upload pg_regression files
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: results
        path: ${{ github.workspace }}/pg_regression.tar.gz

